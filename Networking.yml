AWSNetworkTemplateFormatVersion: '2010-09-09'

Description:
  Infrastructure high availability and of a web server

Parameters:
  VpcCIRD:
    Type: String
    Description: CIDR of the VPC
    Default: 172.16.0.0/16
  
  PublicSubnetACIDR:
    Type: String
    Description: CIDR of public subnet A
    Default: 172.16.1.0/24

  PrivateSubnetACIDR:
    Type: String
    Description: CIDR of private subnet A
    Default: 172.16.2.0/24

Resources:

  #Configure a VPC
  VPCmainStore:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIRD
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: VPC-Mainstore

  #Configure the subnets
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCmainStore
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PublicSubnetACIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnetA

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCmainStore
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PrivateSubnetACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnetA      
  #Configure the internet gateway

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw-mainstore
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCmainStore
      InternetGatewayId: !Ref InternetGateway

  #Configure route tables

  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCmainStore
      Tags:
        - Key: Name
          Value: PublicRouteTableA
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTableA

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCmainStore
      Tags:
        - Key: Name
          Value: PrivateRouteTableA
 
  PrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
        
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA
  
 Outputs:
  VPCmainStore:
    Value: !Ref VPCmainStore
    Export:
      Name: !Sub ${AWS::StackName}-VPCID
  
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetA
  
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetA